"use strict";(self.webpackChunklfx_rushstack_io=self.webpackChunklfx_rushstack_io||[]).push([[133],{158:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(6393);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=o,u=d["".concat(p,".").concat(h)]||d[h]||c[h]||r;return n?a.createElement(u,i(i({ref:t},m),{},{components:n})):a.createElement(u,i({ref:t},m))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=n(216),o=n(2228),r=(n(6393),n(158)),i=["components"],s={title:"Installation models"},p=void 0,l={unversionedId:"pages/concepts/install_models",id:"pages/concepts/install_models",title:"Installation models",description:"Installing a package involves downloading an archive and extracting its files into a folder on disk,",source:"@site/docs/pages/concepts/install_models.md",sourceDirName:"pages/concepts",slug:"/pages/concepts/install_models",permalink:"/pages/concepts/install_models",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/lfx.rushstack.io/docs/pages/concepts/install_models.md",tags:[],version:"current",frontMatter:{title:"Installation models"},sidebar:"docsSidebar",previous:{title:"SemVer",permalink:"/pages/concepts/semver"},next:{title:"Tracing package resolution",permalink:"/pages/concepts/tracing_resolution"}},m={},c=[],d={toc:c};function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Installing a package involves downloading an archive and extracting its files into a folder on disk,\nfor example into the ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules")," folder tree. We'll use the term ",(0,r.kt)("strong",{parentName:"p"},"installation model")," to describe\nthe mechanics of this process. Unlike most other programming languages, there are multiple installation models\nin common use for Node.js today:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NPM installation model")," - The classic ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules")," layout, currently used by ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"NPM"),"\nas well as ",(0,r.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/lang/en/"},"Yarn Classic"),".\nThe fundamental design of this algorithm unavoidably produces\n",(0,r.kt)("a",{parentName:"p",href:"https://rushjs.io/pages/advanced/phantom_deps/"},"phantom dependencies"),"\n(ability to import files that were not declared in ",(0,r.kt)("strong",{parentName:"p"},"package.json"),"), as well as\n",(0,r.kt)("a",{parentName:"p",href:"https://rushjs.io/pages/advanced/npm_doppelgangers/"},"NPM doppelgangers"),"\n(duplicate installations of the same version of the same package).\nNPM's implementation also produces\n",(0,r.kt)("a",{parentName:"p",href:"http://npm.github.io/how-npm-works-docs/npm3/non-determinism.html"},"nondeterministic installations"),"\ndepending on the order in which CLI comands are invoked.\nThe later installation models can all be understood as attempts to mitigate these design flaws,\nwith different tradeoffs for backwards compatibility with legacy packages.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"PNPM installation model")," - The ",(0,r.kt)("a",{parentName:"p",href:"https://pnpm.io/"},"PNPM")," package manager introduced a completely\ndifferent ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules")," layout that relies heavily on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Symbolic_link"},"symlinks"),".\nThis completely eliminates the problem of ",(0,r.kt)("strong",{parentName:"p"},"NPM doppelgangers")," (although ",(0,r.kt)("strong",{parentName:"p"},"peer doppelgangers")," are still\npossible). It also can completely eliminate ",(0,r.kt)("strong",{parentName:"p"},"phantom dependencies"),",\ndepending on the ",(0,r.kt)("a",{parentName:"p",href:"https://pnpm.io/npmrc#dependency-hoisting-settings"},"dependency hoisting")," configuration.\nThe resulting ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules")," structure is somewhat convoluted, but its big advantage is excellent\nbackwards compatibility with legacy code that resolves modules by traversing the ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules")," tree.\n(Compatibility fixes are sometimes required, but in most cases the fix is very simple, and today almost every\npopular package has been fixed.) Yarn now also optionally supports the PNPM installation model via\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://yarnpkg.com/api/modules/plugin_pnpm.html"},"@yarnpkg/plugin-pnpm")," plugin.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Plug'n'Play (PnP) installation model")," - The ",(0,r.kt)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn")," package manager took a different\napproach, by introducing a hook called ",(0,r.kt)("a",{parentName:"p",href:"https://yarnpkg.com/features/pnp"},"Plug'n'Play")," that allows the Node.js\n",(0,r.kt)("inlineCode",{parentName:"p"},"require()")," API to be patched with a completely different implementation. The basic concept is that ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn install"),"\nwill generate a patch script ",(0,r.kt)("inlineCode",{parentName:"p"},".pnp.cjs"),", and then Node.js gets invoked with ",(0,r.kt)("inlineCode",{parentName:"p"},'NODE_OPTIONS="--require $(pwd)/.pnp.cjs"'),".\nThe script is expected to implement the ",(0,r.kt)("a",{parentName:"p",href:"https://yarnpkg.com/advanced/pnpapi"},"PnP API")," contract, although there\nis currently no spec for how module resolution might be performed by a tool that cannot execute arbitrary\nJavaScript code (for example a Java service). Because it fundamentally redesigns the semantics of ",(0,r.kt)("inlineCode",{parentName:"p"},"require()"),",\nPlug'n'Play offers significant improvements in both features and performance; however it has struggled to gain\nwidespread adoption due to compatibility challenges for existing NPM packages. The PNPM package manager\nnow optionally supports the Plug'n'Play installation model via\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://pnpm.io/npmrc#node-linker"},"node-linker=pnp")," setting.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Rush legacy symlinking")," - Rush implemented its own\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rushstack/blob/main/libraries/rush-lib/src/logic/npm/NpmLinkManager.ts"},"symlinking installation model"),"\nwhich predates the Yarn and PNPM workspace features. This model is used when ",(0,r.kt)("inlineCode",{parentName:"p"},"useWorkspaces=false"),"\nin ",(0,r.kt)("a",{parentName:"p",href:"https://rushjs.io/pages/configs/pnpm-config_json/"},"pnpm-config.json"),", or if the Yarn or NPM package manager\nis selected in ",(0,r.kt)("strong",{parentName:"p"},"rush.json"),". This algorithm is still supported but not recommended."))),(0,r.kt)("p",null,"Rush Stack recommends the ",(0,r.kt)("strong",{parentName:"p"},"PNPM installation model")," for monorepos, because it currently seems to provide\nthe best tradeoff between correctness and backwards compatibility. It is the default and best supported\ninstallation mode for the Rush build orchestrator. It is the only model supported by Lockfile Explorer,\nalthough in the future we expect to implement support for other lockfile formats."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"PNPM's ",(0,r.kt)("a",{parentName:"p",href:"https://pnpm.io/feature-comparison"},"Feature Comparison")," summarizes some other interesting\ndifferences between package managers, beyond the installation models that they support.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'The acronyms "PnP" and "PNPM" are easy to confuse: PnP (Plug\'n\'Play) is an installation model,\nwhereas PNPM is a package manager whose default installation model is not PnP.')))}h.isMDXComponent=!0}}]);