"use strict";(self.webpackChunklfx_rushstack_io=self.webpackChunklfx_rushstack_io||[]).push([[590],{158:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(6393);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(n),u=o,k=c["".concat(s,".").concat(u)]||c[u]||d[u]||r;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>b,default:()=>x,frontMatter:()=>y,metadata:()=>C,toc:()=>w});var a=n(216),o=n(2228),r=n(6393),l=n(158),i=n(5881),s=n(6785),p=n(5882),m=n(2868),d=n(9580);const c="tabList_dxiR",u="tabItem_znke";function k(e){var t,n,o=e.lazy,l=e.block,s=e.defaultValue,k=e.values,h=e.groupId,f=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=k?k:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,p.l)(N,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===s?s:null!=(t=null!=s?s:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:g[0].props.value;if(null!==b&&!N.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+N.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var C=(0,m.U)(),v=C.tabGroupChoices,w=C.setTabGroupChoices,j=(0,r.useState)(b),x=j[0],_=j[1],T=[],P=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var I=v[h];null!=I&&I!==x&&N.some((function(e){return e.value===I}))&&_(I)}var O=function(e){var t=e.currentTarget,n=T.indexOf(t),a=N[n].value;a!==x&&(P(t),_(a),null!=h&&w(h,String(a)))},S=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,o=T.indexOf(e.currentTarget)+1;n=null!=(a=T[o])?a:T[0];break;case"ArrowLeft":var r,l=T.indexOf(e.currentTarget)-1;n=null!=(r=T[l])?r:T[T.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},f)},N.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:function(e){return T.push(e)},onKeyDown:S,onFocus:O,onClick:O},o,{className:(0,i.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":x===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function h(e){var t=(0,s.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}const f="tabItem_o_Vg";function g(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(f,a),hidden:n},t)}var N=["components"],y={title:"Tracing package resolution"},b=void 0,C={unversionedId:"pages/concepts/tracing_resolution",id:"pages/concepts/tracing_resolution",title:"Tracing package resolution",description:"",source:"@site/docs/pages/concepts/tracing_resolution.md",sourceDirName:"pages/concepts",slug:"/pages/concepts/tracing_resolution",permalink:"/pages/concepts/tracing_resolution",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/lfx.rushstack.io/docs/pages/concepts/tracing_resolution.md",tags:[],version:"current",frontMatter:{title:"Tracing package resolution"},sidebar:"docsSidebar",previous:{title:"Installation models",permalink:"/pages/concepts/install_models"},next:{title:"The PNPM lockfile",permalink:"/pages/concepts/pnpm_lockfile"}},v={},w=[{value:"CommonJS module resolution",id:"commonjs-module-resolution",level:2},{value:"\ud83d\udd0d Tracing CommonJS resolution",id:"-tracing-commonjs-resolution",level:3},{value:"1. Clone the demo repo",id:"1-clone-the-demo-repo",level:4},{value:"2. Inspect the symlinks",id:"2-inspect-the-symlinks",level:4},{value:"3. Resolving with &quot;trace-import&quot;",id:"3-resolving-with-trace-import",level:4},{value:"4. Tracing parent folders",id:"4-tracing-parent-folders",level:4},{value:"ES module resolution",id:"es-module-resolution",level:2},{value:"TypeScript module resolution",id:"typescript-module-resolution",level:2},{value:"\ud83d\udd0d Tracing TypeScript resolution",id:"-tracing-typescript-resolution",level:3},{value:"See also",id:"see-also",level:2}],j={toc:w};function x(e){var t=e.components,n=(0,o.Z)(e,N);return(0,l.kt)("wrapper",(0,a.Z)({},j,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"commonjs-module-resolution"},"CommonJS module resolution"),(0,l.kt)("p",null,"If you are using the NPM or PNPM ",(0,l.kt)("a",{parentName:"p",href:"/pages/concepts/install_models"},"installation model"),", the CommonJS ",(0,l.kt)("inlineCode",{parentName:"p"},"require()")," API performs\nmodule resolution by traversing physical folders on disk. This is convenient for troubleshooting, as many\nproblems can be understood simply by inspecting folders using your shell. The complete algorithm is detailed in\n",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/modules.html#all-together"},"the Node.js specification"),", but essentially it works\nlike this (ignoring many details such as folder imports and path mappings):"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"If your import path starts with ",(0,l.kt)("inlineCode",{parentName:"p"},".")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"..")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"/"),", for example ",(0,l.kt)("inlineCode",{parentName:"p"},"require('./path/to/file')"),",\nthen the entire string will be resolved as a regular file/folder path.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Otherwise, the first part will be interpreted as an NPM package name. For example\n",(0,l.kt)("inlineCode",{parentName:"p"},"require('one/two/three')")," would look for an NPM package called ",(0,l.kt)("inlineCode",{parentName:"p"},"one"),",\nand ",(0,l.kt)("inlineCode",{parentName:"p"},"require('@company/one/two/three')")," would look for an NPM package ",(0,l.kt)("inlineCode",{parentName:"p"},"@company/one"),".")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"If the API call ",(0,l.kt)("inlineCode",{parentName:"p"},"require('@company/one/two/three')")," is performed by a script ",(0,l.kt)("inlineCode",{parentName:"p"},"/a/b/c/d/e.js"),", then\nthe module resolver will look for the ",(0,l.kt)("inlineCode",{parentName:"p"},"@company/one")," install folder by searching for ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules")," folders\nin parents of the script's folder. In our example, the following paths would be checked (approximately, ignoring many details):"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/a/b/c/d/node_modules/@company/one/package.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/a/b/c/node_modules/@company/one/package.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/a/b/node_modules/@company/one/package.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/a/node_modules/@company/one/package.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/@company/one/package.json"))),(0,l.kt)("p",{parentName:"li"},"The first match is taken, ignoring other possible matches. If no match is found, then ",(0,l.kt)("inlineCode",{parentName:"p"},"require()")," fails\nby throwing an exception.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Once a match is found, the ",(0,l.kt)("inlineCode",{parentName:"p"},"two/three")," module subpath is evaluated relative to the ",(0,l.kt)("inlineCode",{parentName:"p"},"@company/one")," install folder.\nLet's suppose that ",(0,l.kt)("inlineCode",{parentName:"p"},"/a/b/node_modules/@company/one/package.json")," was the found install folder;\nthen (absent other mappings) the resolved target path will be ",(0,l.kt)("inlineCode",{parentName:"p"},"/a/b/node_modules/@company/one/two/three.js"),".")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"If the package subpath is not specified, for example ",(0,l.kt)("inlineCode",{parentName:"p"},"require('@company/one')"),", then a main index will be used.\nThe default would be ",(0,l.kt)("inlineCode",{parentName:"p"},"/a/b/node_modules/@company/one/index.js"),", but most likely an explicit path will be\nspecified by a ",(0,l.kt)("strong",{parentName:"p"},"package.json")," field such as ",(0,l.kt)("inlineCode",{parentName:"p"},'"main"'),". For example, with ",(0,l.kt)("inlineCode",{parentName:"p"},'"main": "dist/bundle.js"'),",\nthe final target path instead would become ",(0,l.kt)("inlineCode",{parentName:"p"},"/a/b/node_modules/@company/one/dist/bundle.js"),"."))),(0,l.kt)("p",null,"A couple important things to understand about this algorithm:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Phantom dependencies are possible:"),"\nYour ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules")," folder was probably created by ",(0,l.kt)("inlineCode",{parentName:"p"},"pnpm install")," based on some ",(0,l.kt)("strong",{parentName:"p"},"package.json")," file,\nmost likely the package that owns our example script ",(0,l.kt)("inlineCode",{parentName:"p"},"/a/b/c/d/e.js"),". However, at no point does the algorithm\nread THAT ",(0,l.kt)("strong",{parentName:"p"},"package.json")," file. Resolution only considers ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules")," folders, regardless of how they\nwere created. This is the fundamental design flaw that makes\n",(0,l.kt)("a",{parentName:"p",href:"https://rushjs.io/pages/advanced/phantom_deps/"},"phantom dependencies")," possible, along with ",(0,l.kt)("strong",{parentName:"p"},'"hoisting"'),"\nwhich is the dubious practice of intentionally introducing phantom dependencies.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Symlinks get normalized:")," When a package is resolved via a symlink, the folder path is normalized\nby calling ",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/fs.html#fspromisesrealpathpath-options"},"fs.realpath()"),"\nto eliminate any symlinks, so that Step 3 will visit parent folders from the physical path\ninstead of the logical (with symlinks) path."),(0,l.kt)("p",{parentName:"li"},"For example: suppose that ",(0,l.kt)("inlineCode",{parentName:"p"},"/my-repo/my-app/node_modules/my-library")," is actually a symlink to\n",(0,l.kt)("inlineCode",{parentName:"p"},"/my-repo/my-library"),", and the executing script was imported as ",(0,l.kt)("inlineCode",{parentName:"p"},"./node_modules/my-library/dist/bundle.js"),".\nWhen ",(0,l.kt)("inlineCode",{parentName:"p"},"bundle.js")," calls ",(0,l.kt)("inlineCode",{parentName:"p"},"require('some-other-library')"),", the searched parent folder will be\n",(0,l.kt)("inlineCode",{parentName:"p"},"/my-repo/my-library/node_modules/"),", NOT ",(0,l.kt)("inlineCode",{parentName:"p"},"/my-repo/my-app/node_modules"),". This feature is what enables\nthe PNPM installation model to eliminate phantom dependencies."),(0,l.kt)("p",{parentName:"li"},"(This was not true in ancient versions of Node.js; see the\n",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/all.html#cli_preserve_symlinks"},"--preserve-symlinks")," docs for details.)"))),(0,l.kt)("h3",{id:"-tracing-commonjs-resolution"},"\ud83d\udd0d Tracing CommonJS resolution"),(0,l.kt)("p",null,"Let's try a hands-on experiment, to see how CommonJS resolution can be traced by inspecting folders on disk."),(0,l.kt)("h4",{id:"1-clone-the-demo-repo"},"1. Clone the demo repo"),(0,l.kt)("p",null,"Clone and install the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/lockfile-explorer-demos/tree/demo/sample-1"},"demo/sample-1"),"\nbranch from the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/lockfile-explorer-demos/"},"lockfile-explorer-demos"),"\ndemo repo. ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"You will need to launch the Verdaccio service in a separate shell window."))," See the\n",(0,l.kt)("a",{parentName:"p",href:"/pages/scenarios/demos_repo"},"Demos repository")," topic for instructions."),(0,l.kt)("p",null,"Recall that the ",(0,l.kt)("inlineCode",{parentName:"p"},"demo/sample-1")," lockfile looks like this:"),(0,l.kt)("img",{src:"https://raw.githubusercontent.com/microsoft/lockfile-explorer-demos/demo/sample-1/common/images/lfx-demo-sample-1.svg",alt:"dependency graph: demo/sample-1"}),(0,l.kt)("h4",{id:"2-inspect-the-symlinks"},"2. Inspect the symlinks"),(0,l.kt)("p",null,"After running ",(0,l.kt)("inlineCode",{parentName:"p"},"rush install")," in the ",(0,l.kt)("inlineCode",{parentName:"p"},"~/lockfile-explorer-demos/")," folder, the project ",(0,l.kt)("inlineCode",{parentName:"p"},"C")," should\nhave the following files:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/lockfile-explorer-demos/projects/c/package.json"),": defines the package"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/lockfile-explorer-demos/projects/c/index.js"),": some placeholder source code"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/lockfile-explorer-demos/projects/c/node_modules/@rushstack/e/"),": installed folder for dependency E"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/lockfile-explorer-demos/projects/c/node_modules/@rushstack/k/"),": installed folder for dependency K"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/lockfile-explorer-demos/projects/c/node_modules/@rushstack/m/"),": installed folder for dependency M")),(0,l.kt)("p",null,"Observe that PNPM has created symlinks in the ",(0,l.kt)("inlineCode",{parentName:"p"},"c/node_modules")," folder. We can inspect them using the shell:"),(0,l.kt)(h,{mdxType:"Tabs"},(0,l.kt)(g,{value:"bash",label:"Bash",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Example project C's node_modules folder\nls -l projects/c/node_modules/@rushstack/\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lrwxrwxrwx 1 e -> /home/yourself/lockfile-explorer-demos/projects/e/\nlrwxrwxrwx 1 k -> /home/yourself/lockfile-explorer-demos/common/temp/node_modules/.pnpm/@rushstack+k@1.0.0_@rushstack+m@1.0.0/node_modules/@rushstack/k/\nlrwxrwxrwx 1 m -> /home/yourself/lockfile-explorer-demos/common/temp/node_modules/.pnpm/@rushstack+m@1.0.0/node_modules/@rushstack/m/\n"))),(0,l.kt)(g,{value:"windows",label:"PowerShell",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},"# Example project C's node_modules folder\ndir projects\\c\\node_modules\\@rushstack\\ | select Name,LinkType,Target\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Name LinkType Target\n---- -------- ------\ne    Junction {C:\\Git\\lockfile-explorer-demos\\projects\\e\\}\nk    Junction {C:\\Git\\lockfile-explorer-demos\\common\\temp\\node_modules\\.pnpm\\@rushstack+k@1.0.0_@rushstack+m@1.0.0\\node_modules\\@rushstack\\k\\}\nm    Junction {C:\\Git\\lockfile-explorer-demos\\common\\temp\\node_modules\\.pnpm\\@rushstack+m@1.0.0\\node_modules\\@rushstack\\m\\}\n"))),(0,l.kt)(g,{value:"cmd",label:"DOS",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-batch"},":: Example project C's node_modules folder\ndir projects\\c\\node_modules\\@rushstack\\\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Directory of C:\\Git\\lockfile-explorer-demos\\projects\\c\\node_modules\\@rushstack\n\n<DIR>          .\n<DIR>          ..\n<JUNCTION>     e [C:\\Git\\lockfile-explorer-demos\\projects\\e]\n<JUNCTION>     k [C:\\Git\\lockfile-explorer-demos\\common\\temp\\node_modules\\.pnpm\\@rushstack+k@1.0.0_@rushstack+m@1.0.0\\node_modules\\@rushstack\\k]\n<JUNCTION>     m [C:\\Git\\lockfile-explorer-demos\\common\\temp\\node_modules\\.pnpm\\@rushstack+m@1.0.0\\node_modules\\@rushstack\\m]\n")))),(0,l.kt)("p",null,"Observe that:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"node_modules/@rushstack/e")," gets symlinked to ",(0,l.kt)("inlineCode",{parentName:"li"},"projects/e")," because ",(0,l.kt)("inlineCode",{parentName:"li"},"c/package.json")," declared\nit as a local workspace dependency (",(0,l.kt)("inlineCode",{parentName:"li"},'"@rushstack/e": "workspace:*"'),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"node_modules/@rushstack/m")," gets symlinked to a folder under ",(0,l.kt)("inlineCode",{parentName:"li"},"common/temp")," because\n",(0,l.kt)("inlineCode",{parentName:"li"},"c/package.json")," declared it as an external dependency, installed from the NPM registry\n(",(0,l.kt)("inlineCode",{parentName:"li"},'"@rushstack/m": "~1.0.0"')," without ",(0,l.kt)("inlineCode",{parentName:"li"},"workspace:"),")")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: In a Rush monorepo, the ",(0,l.kt)("inlineCode",{parentName:"p"},"workspace:")," dependency specifier unambiguously determines whether\nthe target is a local project or an external package. This is because Rush silently forces\n",(0,l.kt)("a",{parentName:"p",href:"https://pnpm.io/npmrc#link-workspace-packages"},"--link-workspace-packages=false"),".\nIf you are using PNPM without Rush, this may not be the case, in which case you'll have to\ndeduce the answer by hunting for a matching workspace project and then double-checking\nthat its version matches the specified ",(0,l.kt)("inlineCode",{parentName:"p"},"worksapce:")," range.")),(0,l.kt)("h4",{id:"3-resolving-with-trace-import"},'3. Resolving with "trace-import"'),(0,l.kt)("p",null,"Instead of inspecting symlinks, we can use the\n",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@rushstack/trace-import"},"@rushstack/trace-import"),"\ntool to test how the dependency gets resolved:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# From the folder of project C...\ncd ~/lockfile-explorer-demos/projects/c/\n\n# ...let's try to resolve package M\ntrace-import -p @rushstack/m\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"trace-import 0.1.0 - https://rushstack.io\n\nBase folder:             C:\\Git\\lockfile-explorer-demos\\projects\\c\nPackage name:            @rushstack/m\nPackage subpath:         (not specified)\n\nResolving...\n\nPackage folder:          C:\\Git\\lockfile-explorer-demos\\common\\temp\\node_modules\\.pnpm\\@rushstack+m@1.0.0\\node_modules\\@rushstack\\m\npackage.json:            @rushstack/m (1.0.0)\nMain index:              (none)\n\nTarget path:             C:\\Git\\lockfile-explorer-demos\\common\\temp\\node_modules\\.pnpm\\@rushstack+m@1.0.0\\node_modules\\@rushstack\\m\\index.js\n")),(0,l.kt)("h4",{id:"4-tracing-parent-folders"},"4. Tracing parent folders"),(0,l.kt)("p",null,"Now let's follow the chain a step further. At runtime, suppose that ",(0,l.kt)("inlineCode",{parentName:"p"},"C")," imports a script from ",(0,l.kt)("inlineCode",{parentName:"p"},"E"),",\nand then ",(0,l.kt)("inlineCode",{parentName:"p"},"E")," in turn tries to import ",(0,l.kt)("inlineCode",{parentName:"p"},"M"),". Will it work? We might try this experiment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# From the folder of project C/E...\ncd ~/lockfile-explorer-demos/projects/c/node_modules/@rushstack/e/\n\n# ...let's try to resolve package M\ntrace-import -p @rushstack/m\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'trace-import 0.1.0 - https://rushstack.io\n\nBase folder:             C:\\Git\\lockfile-explorer-demos\\projects\\c\\node_modules\\@rushstack\\e\nPackage name:            @rushstack/m\nPackage subpath:         (not specified)\n\nResolving...\n\nERROR: Cannot find package "@rushstack/m" from "C:\\Git\\lockfile-explorer-demos\\projects\\c\\node_modules\\@rushstack\\e".\n')),(0,l.kt)("p",null,"Even though ",(0,l.kt)("inlineCode",{parentName:"p"},"projects/c/node_modules/")," contains M and appears to be a parent folder\nof ",(0,l.kt)("inlineCode",{parentName:"p"},"projects/c/node_modules/@rushstack/e/"),", this path traverses a symlink. Recall that\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"require()")," algorithm uses ",(0,l.kt)("inlineCode",{parentName:"p"},"fs.realpath()")," to eliminate symlinks, so the search\nactually starts from ",(0,l.kt)("inlineCode",{parentName:"p"},"projects/e")," not ",(0,l.kt)("inlineCode",{parentName:"p"},"projects/c/node_modules/@rushstack/e/"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Warning: If you're creating a tool that needs to resolve imports, do not write your own code that\ntraverses ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules")," folders. The presentation here is greatly simplified for learning purposes;\nthe full algorithm is complex and difficult to implement correctly. Instead, use a standard API such as\n",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/modules.html#requireresolverequest-options"},"require.resolve()"),",\n",(0,l.kt)("a",{parentName:"p",href:"https://api.rushstack.io/pages/node-core-library.import/"},"node-core-library Import"),",\nor the ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/resolve"},"resolve")," NPM package.")),(0,l.kt)("h2",{id:"es-module-resolution"},"ES module resolution"),(0,l.kt)("p",null,'CommonJS is consdered a "legacy" module system, and today it is mainly used by Node.js\nand associated tools such as Jest. Bundlers such as Webpack implement the modern ECMAScript\nmodule system, whose most visible difference is that scripts use ',(0,l.kt)("inlineCode",{parentName:"p"},"import")," instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"require()"),".\n(Webpack prefers ECMAScript because ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," is a declaration instead of an API call,\ndata instead of code, which provides guarantees that enable better optimizations.)"),(0,l.kt)("p",null,"A library will often want to support both ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"require()"),", which requires having a maintaing\nseparate copies of the code in each format. For example, consider the\n",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@microsoft/tsdoc"},"@microsoft/tsdoc")," NPM package.\nIts ",(0,l.kt)("strong",{parentName:"p"},"package.json")," specifies two fields ",(0,l.kt)("inlineCode",{parentName:"p"},'"main"')," and ",(0,l.kt)("inlineCode",{parentName:"p"},'"module"'),":"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/tsdoc/blob/c758984fb4e088e69d7ea34ccab07e9def01448d/tsdoc/package.json#L20"},"@microsoft/tsdoc/package.json")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "name": "@microsoft/tsdoc",\n  "version": "0.14.2",\n  "description": "A parser for the TypeScript doc comment syntax",\n  . . .\n  "main": "lib-commonjs/index.js",\n  "module": "lib/index.js",\n  "typings": "lib/index.d.ts",\n')),(0,l.kt)("p",null,"If present, the ",(0,l.kt)("inlineCode",{parentName:"p"},'"module"')," field will be used by ECMAScript imports. In the above example,\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"lib/index.js")," script will have the ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," declarations that Webpack understands,\nwhereas ",(0,l.kt)("inlineCode",{parentName:"p"},"lib-commonjs/index.js")," would have ",(0,l.kt)("inlineCode",{parentName:"p"},"require()")," API calls that classic Node.js needs."),(0,l.kt)("h2",{id:"typescript-module-resolution"},"TypeScript module resolution"),(0,l.kt)("p",null,"At compile time, TypeScript compiler looks for ",(0,l.kt)("inlineCode",{parentName:"p"},".d.ts")," files instead of ",(0,l.kt)("inlineCode",{parentName:"p"},".js")," files. In the simple case,\nit simply performs CommonJS or ECMAScript resolution to find the ",(0,l.kt)("inlineCode",{parentName:"p"},".js")," file, and then looks for a ",(0,l.kt)("inlineCode",{parentName:"p"},".d.ts")," file\nin the same folder. For example, ",(0,l.kt)("inlineCode",{parentName:"p"},"example-package/dist/bundle.js")," maps to ",(0,l.kt)("inlineCode",{parentName:"p"},"example-package/dist/bundle.d.ts"),"."),(0,l.kt)("p",null,"However, like with ",(0,l.kt)("inlineCode",{parentName:"p"},'"main"')," and ",(0,l.kt)("inlineCode",{parentName:"p"},'"module"'),", you can specify a main index using ",(0,l.kt)("inlineCode",{parentName:"p"},'"typings"')," as seen above.\n(The field can be called ",(0,l.kt)("inlineCode",{parentName:"p"},'"types"')," or ",(0,l.kt)("inlineCode",{parentName:"p"},'"typings"')," -- they have the same meaning.)"),(0,l.kt)("p",null,"If none of these methods work, the TypeScript compiler will also search for a\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/DefinitelyTyped/DefinitelyTyped"},"Definitely Typed"),". The default naming\npattern uses ",(0,l.kt)("inlineCode",{parentName:"p"},"@types")," NPM scope, like this:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"NPM package name"),(0,l.kt)("th",{parentName:"tr",align:null},"DefinitelyTyped package name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"example")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"@types/example"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"@scope/example")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"@types/scope__example"))))),(0,l.kt)("p",null,"The full spec is detailed in the\n",(0,l.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html"},"TypeScript Handbook"),"."),(0,l.kt)("h3",{id:"-tracing-typescript-resolution"},"\ud83d\udd0d Tracing TypeScript resolution"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"trace-import")," tool can also be used to try resolving ",(0,l.kt)("inlineCode",{parentName:"p"},".d.ts")," files for TypeScript.\nThe command line is the same as in the above example, except that you need to include\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"--resolution-type ts")," parameter (",(0,l.kt)("inlineCode",{parentName:"p"},"-t ts")," for short)."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"trace-import")," tool is quick and convenient; however, it currently does not implement advanced\nimport mappings and ",(0,l.kt)("strong",{parentName:"p"},"tsconfig.json")," settings. For the most accurate diagnostics, it's recommended\ninstead to compile your project using the\n",(0,l.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig/#traceResolution"},"--traceResolution"),"\nswitch for ",(0,l.kt)("inlineCode",{parentName:"p"},"tsc"),". This option produces megabytes of diagnostic logging, so it's recommended to\nredirect the output to a file, like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cd my-typescript-project/\n\n# Redirect the output to trace.log\ntsc --traceResolution > trace.log\n\n# Now you can inspect this file using VS Code\ncode trace.log\n")),(0,l.kt)("h2",{id:"see-also"},"See also"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@rushstack/trace-import"},"@","rushstack/trace-import"),": Our command-line tool for troubleshooting how modules are resolved by ",(0,l.kt)("inlineCode",{parentName:"li"},"import")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"require()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://nodejs.org/api/modules.html#all-together"},"Node.js require()")," specification and algorithm"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://nodejs.org/api/modules.html#requireresolverequest-options"},"Node.js require.resolve()")," API docs"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://api.rushstack.io/pages/node-core-library.import/"},"node-core-library Import"),": the Rush Stack API\nwhich provides similar functionality as ",(0,l.kt)("inlineCode",{parentName:"li"},"require.resolve()")," but with improved TypeScript typings and some\nadditional features"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/resolve"},"resolve"),": a standalone NPM package that implements\n",(0,l.kt)("inlineCode",{parentName:"li"},"require.resolve()")," algorithm with the ability to specify a base folder (it is used internally\nby ",(0,l.kt)("inlineCode",{parentName:"li"},"Import"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.npmjs.com/cli/v6/configuring-npm/package-json"},"package.json fields")," docs from NPM")))}x.isMDXComponent=!0}}]);